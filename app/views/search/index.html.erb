<%= render partial: 'layouts/navbar' if current_user %>

<div id='map' class='dark'>
</div>
<div id="search">
  <div class="filter-container">
    <div class='filter-ctrl'>
      <input class='filter-input' type='text' name='filter' placeholder='Filter by HUC' />
    </div>
    <div class='filter-options'>&nbsp;&nbsp;&nbsp;8 digit HUC,
      <%= link_to "CO Watershed HUCS", "/stations", target: '_blank'%>
    </div>
  </div>

  <div class="filter-container station-type">
    <div class='filter-ctrl'>
      <input class='filter-input' type='text' name='filter' placeholder='Filter by Station Type' />
    </div>
    <div class='filter-options'>&nbsp;&nbsp;&nbsp;ex. Stream,
      <%= link_to "all options", "https://www.waterqualitydata.us/Codes/siteType?mimeType=json", target: '_blank'%>
    </div>
  </div>

  <div class="filter-container">
    <div class='filter-ctrl'>
      <input class='filter-input' type='text' name='filter' placeholder='Filter by 3-digit County Code' />
    </div>
    <div class='filter-options'>&nbsp;&nbsp;&nbsp;ex. 005 for Arapahoe County,
      <%= link_to "list", "https://en.wikipedia.org/wiki/List_of_counties_in_Colorado", target: '_blank'%>
    </div>
  </div>

  <div class="filter-container station-type">
    <div class='filter-ctrl'>
      <input class='filter-input' type='text' name='filter' placeholder='Filter by Station ID' />
    </div>
    <div class='filter-options'>&nbsp;&nbsp;&nbsp;ex. USGS-09251500</div>
  </div>

  <div class="filter-container" style="border: none">
    <div class='filter-ctrl'>
      <input class='filter-input' type='text' name='filter' placeholder='Filter by Drainage Area Range' />
    </div>
    <div class='filter-options'>&nbsp;&nbsp;&nbsp;ex. 100-200 (sq. mi.)</div>
  </div>

  <div class="search-button-container">
    <button onclick="getStations(map)" class="register station-search">Search for Stations</button>
  </div>

  <div class="select-project">
    Select Project:&nbsp;&nbsp;&nbsp;
    <select class="project" name="project_name">
    </select>
  </div>

  <div class="search-results-container">
  </div>
</div>

<script>
  $(".select-project").hide();

  mapboxgl.accessToken = 'pk.eyJ1IjoiYW1qMTMzIiwiYSI6ImNqaTF6dGZ6cTBhejIza3FzbGhsOHBmZG8ifQ.YRKopJwU0idtffBarsWgaA';

  var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/amj133/cjfrm7b812kpt2rqq2w1xm1v5',
    center: [-106, 39],
    zoom: 6
  });

  map.addControl(new mapboxgl.NavigationControl());

  var filterInput = document.getElementsByClassName('filter-input');

  function createURI(filterInput) {
    var uri = "?";
    if (filterInput[0].value != "") {
      uri = uri + "huc=" + filterInput[0].value + " ";
    }
    if (filterInput[1].value != "") {
      uri = uri + "siteType=" + filterInput[1].value + " ";
    }
    if (filterInput[2].value != "") {
      uri = uri + "countycode=" + "US:08:" + filterInput[2].value + " ";
    }
    if (filterInput[3].value != "") {
      uri = uri + "siteid=" + filterInput[3].value;
    }
    if (filterInput[4].value != "") {
      uri = uri + "drainageArea=" + filterInput[4].value;
    }
    return uri.replace(/ /g, "&");
  }

  var i = 1;

   function getStations(map) {
     var uri = createURI(filterInput);
     $.ajax({
       dataType: 'text',
       url: '/api/v1/stations' + uri,
       success:function(events) {
         var stations = JSON.parse(events);
         var new_lat = stations[0].geometry.coordinates[0]
         var new_long = stations[0].geometry.coordinates[1]
         map.flyTo({center: [new_lat, new_long], zoom: 8.4});
         map.addLayer({
           "id": "stations" + i,
           "type": "symbol",
           "source": {
             "type": "geojson",
             "data": {
               "type": "FeatureCollection",
               "features": stations
             }
           },
           "layout": {
             "icon-image": "circle-11",
             "icon-allow-overlap": true
           }
         });
         if ($(".search-results-container")[0].innerHTML < 10){
           $(".search-results-container").append(
             `<button onclick="addFavoriteStations(map)" class="register station-search">Add Stations To Project</button>
              </form>`
           );
           $(".search-button-container").append(
             '<button onclick="clearSearch(map)" class="register station-search clear-search">Clear Recent Search</button>'
           )
         }

         $(".select-project").show();

         $(".search-results-container").prepend(
           `<form action="/favorite_stations" method="post" id="station-search-results">
           ${printStations(stations).join().replace(/,/g, '')}`
         );

         var projects = <%= raw @projects %>;

         if ($(".select-project")[0].innerHTML.includes("<option value=")) {
           } else {
             projects.forEach(function(project) {
               $(".project").append(
                 `<option value="${project.name}">${project.name}</option>`
             )})
           }
       },

       error:function(e) {
        alert(JSON.parse(e.responseText).errors);
       }
     });
     i += 1;
     map.on('mouseenter', 'stations' + i, function () {
        map.getCanvas().style.cursor = 'pointer';
     });

     map.on('mouseleave', 'stations' + i, function () {
         map.getCanvas().style.cursor = '';
     });
   }

  function clearSearch(map) {
    map.getStyle().layers.forEach((layer) => {
      if(layer.id.substring(0, 7) == 'station') {
          map.removeLayer(layer.id)
      }
    })
    $(".search-results-container")[0].innerHTML = '';
    $(".select-project").hide();
    $(".clear-search").hide();
  }

  function addFavoriteStations() {
    var selected = $(".project");
    var selected_project = selected[0][selected[0].options.selectedIndex].value;
    alert(`Stations being added to ${selected_project}!`);

    var fav_stations = []
    $('.station-results:checked').each(function() {
        fav_stations.push(this.value);
    })

    var payload = {}
    payload["project"] = selected_project
    payload["fav_stations"] = fav_stations

    $.ajax({
      type: "POST",
      url: "/api/v1/projects",
      data: payload
    });
  }

  function printStations(stations) {
    return stations.map(function(station) {
      return `<input class="station-results ${station.properties.id}" type="checkbox" name="station_id" value="${station.properties.id}">${station.properties.id}<br>`
    })
  }

  function scrollToStation(feature, distanceToResultsContainer) {
    $('.search-results-container').animate({
        scrollTop: $(`.${feature.properties.id}`).offset().top - 1.5 - distanceToResultsContainer
    }, 2000);
  }

  map.on('click', function(e) {
    var features = map.queryRenderedFeatures(e.point);

    if (!features.length) {
      return;
    }
    var feature = features[0];

    var distanceToResultsContainer = $('.search-results-container').offset().top
    scrollToStation(feature, distanceToResultsContainer)

    const createDrainageAreaText = (feature) => {
      if(feature.properties.drainage_area == 0) {
        return "Not provided"
      } else {
        return (feature.properties.drainage_area + " " + feature.properties.drainage_area_units)
      }
    }

    var popup = new mapboxgl.Popup({ offset: [0, -1] })
      .setLngLat(feature.geometry.coordinates)
      .setHTML('<h3>' + feature.properties.name + '</h3>'
               + `<a href='/stations/${feature.properties.id}' target='_blank'> ID: ` + feature.properties.id + '</a>'
               + '<p> Type: ' + feature.properties.type
               + '<p> Watershed: ' + createDrainageAreaText(feature)
               + '<p> Latitude: ' + feature.geometry.coordinates[1]
               + '<p> Longitude: ' + feature.geometry.coordinates[0]
               + '</p>')
      .setLngLat(feature.geometry.coordinates)
      .addTo(map);

    popup.on('close', function(e) {
      $('.search-results-container').animate({scrollTop: 0}, 500);
    })
  });
</script>
