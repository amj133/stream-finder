<div class="max-width-5 mx-auto top-90 mid-nav-3">
  <div class="clearfix">
    <%= image_tag 'logo.png' %>
  </div>
</div>

<div id='map' class='dark'></div>

<div class="filter-container">
  <div class='filter-ctrl'>
    <input class='filter-input' type='text' name='filter' placeholder='Filter by HUC' />
  </div>
  <div class='filter-options'>&nbsp;&nbsp;&nbsp;8 digit HUC code,
    <%= link_to "CO Watershed HUCS", "https://cfpub.epa.gov/surf/state.cfm?statepostal=CO", target: '_blank'%></div>
</div>

<div class="filter-container">
  <div class='filter-ctrl'>
    <input class='filter-input' type='text' name='filter' placeholder='Filter by Station Type' />
  </div>
  <div class='filter-options'>&nbsp;&nbsp;&nbsp;ex. Stream -
    <%= link_to "all options", "https://www.waterqualitydata.us/Codes/siteType?mimeType=json", target: '_blank'%></div>
</div>

<div class="filter-container">
  <div class='filter-ctrl'>
    <input class='filter-input' type='text' name='filter' placeholder='Filter by 3-digit County Code' />
  </div>
  <div class='filter-options'>&nbsp;&nbsp;&nbsp;ex. 005 for Arapahoe County,
    <%= link_to "list", "https://en.wikipedia.org/wiki/List_of_counties_in_Colorado", target: '_blank'%></div>
</div>

<div class="filter-container">
  <div class='filter-ctrl'>
    <input class='filter-input' type='text' name='filter' placeholder='Filter by Station ID' />
  </div>
  <div class='filter-options'>&nbsp;&nbsp;&nbsp;Agency Site ID ex. USGS-09251500</div>
</div>

<div class="search-button-container">
  <button onclick="getStations(map)" class="btn rounded">Search for Stations</button>
</div>

<div class="select-project">
  Select Project:&nbsp;&nbsp;&nbsp;
  <select class="project" name="project_name">
  </select>
</div>

<div class="search-results-container">
</div>


<script>
  $(".select-project").hide();

  mapboxgl.accessToken = 'pk.eyJ1IjoiYW1qMTMzIiwiYSI6ImNqZmoyNDA1NzBkc3cycXFveTVxNDF6ZWkifQ.Qxx-FLv74uWIPQq1fmpwyA';

  var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/amj133/cjfrm7b812kpt2rqq2w1xm1v5',
    center: [-106, 39],
    zoom: 6
  });

  map.addControl(new mapboxgl.NavigationControl());

  var filterInput = document.getElementsByClassName('filter-input');

//-----------CREATE URI FUNCTION-------------

function createURI(filterInput) {
  var uri = "?";
  if (filterInput[0].value != "") {
    uri = uri + "huc=" + filterInput[0].value + " ";
  }
  if (filterInput[1].value != "") {
    uri = uri + "siteType=" + filterInput[1].value + " ";
  }
  if (filterInput[2].value != "") {
    uri = uri + "countycode=" + "US:08:" + filterInput[2].value + " ";
  }
  if (filterInput[3].value != "") {
    uri = uri + "siteid=" + filterInput[3].value;
  }
  return uri.replace(/ /g, "&");
}

//-----------AJAX FUNCTION ------------------
  var i = 1;

   function getStations(map) {
     var uri = createURI(filterInput);
     $.ajax({
       dataType: 'text',
       url: '/api/v1/stations' + uri,
       success:function(events) {
         var stations = JSON.parse(events);
         var new_lat = stations[0].geometry.coordinates[0]
         var new_long = stations[0].geometry.coordinates[1]
         map.flyTo({center: [new_lat, new_long], zoom: 8.4});
         map.addLayer({
           "id": "stations" + i,
           "type": "symbol",
           "source": {
             "type": "geojson",
             "data": {
               "type": "FeatureCollection",
               "features": stations
             }
           },
           "layout": {
             "icon-image": "circle-11",
             "icon-allow-overlap": true
           }
         });
         //-----------CREATE LI FOR EACH STATION-----------
         if ($(".search-results-container")[0].innerHTML < 10){
           $(".search-results-container").append(
             `<button onclick="addFavoriteStations(map)" class="btn rounded">Add Stations</button>
              </form>`
           );
         }

         $(".select-project").show();

         $(".search-results-container").prepend(
           `<form action="/favorite_stations" method="post">
           ${printStations(stations).join().replace(/,/g, '')}`
         );

         //-----------------ADD DROPDOWN-----------------------
         var projects = <%= raw @projects %>;

         if ($(".select-project")[0].innerHTML.includes("<option value=")) {
           } else {
             projects.forEach(function(project) {
               $(".project").append(
                 `<option value="${project.name}">${project.name}</option>`
             )})
           }
       }, // <----- END OF AJAX SUCCESS


       error:function() {
         alert("Could not load the events");
       }
     });
     i += 1;
     map.on('mouseenter', 'stations' + i, function () {
        map.getCanvas().style.cursor = 'pointer';
     });

     map.on('mouseleave', 'stations' + i, function () {
         map.getCanvas().style.cursor = '';
     });
   }

   //--------------------SEND POST TO /api/v1/projects

   const postPayload = (body) => {
     return {
       method: 'POST',
       headers: {
         'Content-Type': 'application/json'
       },
       body: JSON.stringify(body)
     };
   };

  function addFavoriteStations() {
    var selected = $(".project");
    var selected_project = selected[0][selected[0].options.selectedIndex].value;
    alert(`Stations being added to ${selected_project}!`);

    var fav_stations = []
    $('.station-results:checked').each(function() {
        fav_stations.push(this.value);
    })

    var payload = {}
    payload["project"] = selected_project
    payload["fav_stations"] = fav_stations

    $.ajax({
      type: "POST",
      url: "/api/v1/projects",
      data: payload
    });
  }

   //---------------------printStations (search results list)

   function printStations(stations) {
      return stations.map(function(station) {
        return `<input class="station-results" type="checkbox" name="station_id" value="${station.properties.id}">${station.properties.id}<br>`
     })
   }

  //------------------POPUP------------------------------

  map.on('click', function(e) {
  var features = map.queryRenderedFeatures(e.point);

  if (!features.length) {
    return;
  }

  var feature = features[0];

  var popup = new mapboxgl.Popup({ offset: [0, -15] })
    .setLngLat(feature.geometry.coordinates)
    .setHTML('<h3>' + feature.properties.name
             + '</h3><p> ID: ' + feature.properties.id
             + '</h3><p> Type: ' + feature.properties.type
             + '</h3><p> Watershed: ' + feature.properties.drainage_area + " " + feature.properties.drainage_area_units
             + '</h3><p> Coordinates: ' + feature.geometry.coordinates[1] + feature.geometry.coordinates[0]
             + '</p>')
    .setLngLat(feature.geometry.coordinates)
    .addTo(map);
  });
</script>
