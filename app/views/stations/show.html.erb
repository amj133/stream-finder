<div class="p2 bg-white border rounded my2 mx-auto station-show-info">
  <div class="">
    Station: <%= @station.id %><br><br>
    Type: <%= @station.type %><br><br>
    Description: <%= @station.description %><br><br>
    Coordinates: <%= @station.latitude %>, <%= @station.longitude %><br><br>
    Drainage Area: <%= @station.drainage_area %> <%= @station.drainage_area_units %>.
  </div>
<div>


  <div class="p2 bg-white border rounded my2 mx-auto streamflow-container">
    <div class="chart-title">
      Stream Discharge(cfs) in Past 24 Hours
    </div>
    <canvas id="myChart" width="1600" height="900"></canvas>
  </div>

<script>
// ---------------- FETCHING THE STREAMFLOW INFO -------------------
var station_id = `${5<%= @station_id %>}`;
debugger;
fetch(`/api/v1/streamflow?station_id=${station_id.substr(0-8)}`)
  .then((response) => response.json())
  .then((streamflow) => {
    var time = streamflow.time.map(function(time) {
      return new Date(time.split(" ")[0],
                      time.split(" ")[1] - 1,
                      time.split(" ")[2],
                      time.split(" ")[3],
                      time.split(" ")[4])
    }).sort();
    var ctx = document.getElementById("myChart");
    var myChart = new Chart(ctx, {
      type: 'bar',
      data: {
        labels: time, //<--- X-AXIS GOES HERE
        datasets: [
          {
            data: streamflow.discharge, //<--- Y-AXIS GOES HERE
            label: "Discharge",
            borderColor: "#3e95cd",
            fill: false,
            backgroundColor: 'rgb(106, 157, 164)',
            borderColor: 'rgb(9, 23, 74)',
          }
        ]
      },
      options : {
       scales: {
         yAxes: [{
           // ticks: {
           //   min: 9,
           //   max: 13,
           // },
           scaleLabel: {
             display: true,
             labelString: 'Discharge (cfs)'
           }
         }],
         xAxes: [{
           bounds: 'ticks',
           type: 'time',
           time: {
                  displayFormats: {
                    hour: 'MMM D, h:mm a'
                }
           },
           distribution: 'linear',
           scaleLabel: {
             display: true,
             labelString: 'Time',
             unit: 'hour'
           }
         }],
       }
     }
    });
  })

  var time = [
              new Date(2008, 1, 2, 5, 15),
              new Date(2008, 1, 2, 5, 30),
              new Date(2008, 1, 2, 5, 45),
              new Date(2008, 1, 2, 6, 00),
              new Date(2008, 1, 2, 6, 15),
              new Date(2008, 1, 2, 6, 30),
              new Date(2008, 1, 2, 6, 45),
              new Date(2008, 1, 2, 7, 00),
              new Date(2008, 1, 2, 7, 15),
              new Date(2008, 1, 2, 7, 30)
              ];

  // y-axis data below
  // var africa = [86,114,106,106,107,111,133,221,783,2478];
  // var asia = [282,350,411,502,635,809,947,1402,3700,5267];
  // var europe = [168,170,178,190,203,276,408,547,675,734];
  // var latinAmerica = [40,20,10,16,24,38,74,167,508,784];
  // var northAmerica = [6,3,2,2,7,26,82,172,312,433];

  // var ctx = document.getElementById("myChart");
  // var myChart = new Chart(ctx, {
  //   type: 'line',
  //   data: {
  //     labels: time, //<--- X-AXIS GOES HERE
  //     datasets: [
  //       {
  //         data: <%= @discharge %>, //<--- Y-AXIS GOES HERE
  //         label: "Discharge",
  //         borderColor: "#3e95cd",
  //         fill: false
  //       }
  //     ]
  //   },
  //   options : {
  //    scales: {
  //      yAxes: [{
  //        ticks: {
  //          min: 9,
  //          max: 13,
  //        },
  //        scaleLabel: {
  //          display: true,
  //          labelString: 'Discharge (cfs)'
  //        }
  //      }],
  //      xAxes: [{
  //        bounds: 'ticks',
  //        type: 'time',
  //        time: {
  //               displayFormats: {
  //                 hour: 'MMM D h:mm'
  //             }
  //        },
  //        distribution: 'linear',
  //        scaleLabel: {
  //          display: true,
  //          labelString: 'Time',
  //          unit: 'hour'
  //        }
  //      }],
  //    }
  //  }
  // });
</script>
